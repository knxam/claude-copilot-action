#!/bin/bash
# prepare-oauth.sh - –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ OAuth —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è Claude Code

set -e

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏ OAuth
if [[ "$USE_OAUTH" != "true" ]]; then
  echo "OAuth not enabled, skipping preparation"
  exit 0
fi

echo "üîë Preparing OAuth authentication for Claude Max..."

# Debug –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
echo "Debug: CLAUDE_EXPIRES_AT = $CLAUDE_EXPIRES_AT"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if [[ -z "$CLAUDE_ACCESS_TOKEN" ]] || [[ -z "$CLAUDE_REFRESH_TOKEN" ]] || [[ -z "$CLAUDE_EXPIRES_AT" ]]; then
  echo "‚ùå Error: OAuth credentials are missing!"
  echo "Required: CLAUDE_ACCESS_TOKEN, CLAUDE_REFRESH_TOKEN, CLAUDE_EXPIRES_AT"
  exit 1
fi

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è credentials
CLAUDE_DIR="$HOME/.claude"
mkdir -p "$CLAUDE_DIR"

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª credentials.json –≤ —Ñ–æ—Ä–º–∞—Ç–µ, –∫–æ—Ç–æ—Ä—ã–π –æ–∂–∏–¥–∞–µ—Ç Claude Code
cat > "$CLAUDE_DIR/.credentials.json" << EOF
{
  "claudeAiOauth": {
    "accessToken": "$CLAUDE_ACCESS_TOKEN",
    "refreshToken": "$CLAUDE_REFRESH_TOKEN",
    "expiresAt": $CLAUDE_EXPIRES_AT,
    "scopes": ["user:inference", "user:profile"]
  }
}
EOF

echo "‚úÖ OAuth credentials prepared successfully"

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Claude Code
export CLAUDE_AUTH_METHOD="oauth"
echo "CLAUDE_AUTH_METHOD=oauth" >> $GITHUB_ENV

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞
CURRENT_TIME=$(date +%s)

# –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç—ã
if [[ "$CLAUDE_EXPIRES_AT" =~ ^[0-9]+$ ]]; then
  # –ï—Å–ª–∏ —ç—Ç–æ —á–∏—Å–ª–æ (timestamp –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö), –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —Å–µ–∫—É–Ω–¥—ã
  EXPIRES_AT_SEC=$((CLAUDE_EXPIRES_AT / 1000))
else
  # –ï—Å–ª–∏ —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞ —Å –¥–∞—Ç–æ–π, –ø—Ä–æ–±—É–µ–º —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å
  EXPIRES_AT_SEC=$(date -d "$CLAUDE_EXPIRES_AT" +%s 2>/dev/null || echo "0")
fi

if [[ $EXPIRES_AT_SEC -eq 0 ]]; then
  echo "‚ö†Ô∏è Warning: Unable to parse expiration date. Token may be expired."
elif [[ $EXPIRES_AT_SEC -le $CURRENT_TIME ]]; then
  echo "‚ö†Ô∏è Warning: OAuth token has expired. Please refresh your credentials."
else
  REMAINING_DAYS=$(( (EXPIRES_AT_SEC - CURRENT_TIME) / 86400 ))
  echo "‚úÖ Token is valid for $REMAINING_DAYS more days"
fi

echo "üìç Credentials saved to: $CLAUDE_DIR/.credentials.json"

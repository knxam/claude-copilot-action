name: Claude Copilot Agent

on:
  pull_request:
    types: [opened, synchronize]
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: write
  id-token: write  # –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è OIDC –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏

jobs:
  claude-agent:
    # –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –µ—Å–ª–∏:
    # 1. –û—Ç–∫—Ä—ã—Ç PR —Å —Ç–µ–∫—Å—Ç–æ–º "labeling issue #" (–æ—Ç webhook)
    # 2. –°–æ–∑–¥–∞–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ PR —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º @claude
    if: |
      (github.event_name == 'pull_request' && 
       contains(github.event.pull_request.body, 'labeling issue #')) ||
      (github.event_name == 'issue_comment' && 
       github.event.issue.pull_request &&
       contains(github.event.comment.body, '@claude'))
    
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ç–∫—É PR, –∞ –Ω–µ –±–∞–∑–æ–≤—É—é –≤–µ—Ç–∫—É
          ref: ${{ github.event.pull_request.head.ref || github.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up environment
        run: |
          # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ PR –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # –î–ª—è –Ω–æ–≤–æ–≥–æ PR –∏–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–º–µ—Ä issue –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è
            ISSUE_NUMBER=$(echo "${{ github.event.pull_request.body }}" | grep -oP 'issue #\K\d+')
            echo "ISSUE_NUMBER=$ISSUE_NUMBER" >> $GITHUB_ENV
            echo "TRIGGER_TYPE=pr_opened" >> $GITHUB_ENV
            echo "BRANCH_NAME=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
          else
            # –î–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
            echo "TRIGGER_TYPE=comment" >> $GITHUB_ENV
            echo "BRANCH_NAME=${{ github.head_ref }}" >> $GITHUB_ENV
            # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä PR –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
            echo "PR_NUMBER=${{ github.event.issue.number }}" >> $GITHUB_ENV
          fi

      - name: Add eyes reaction
        if: env.TRIGGER_TYPE == 'pr_opened'
        uses: actions/github-script@v7
        with:
          script: |
            // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏—é –≥–ª–∞–∑–∞ –∫ PR –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: 'üëÄ Claude is analyzing the task...'
            });

      - name: Prepare Claude prompt
        id: prepare_prompt
        run: |
          # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è Claude
          if [ "${{ env.TRIGGER_TYPE }}" = "pr_opened" ]; then
            # –î–ª—è –Ω–æ–≤–æ–≥–æ PR –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± issue
            PROMPT="You are working on a PR that was created for issue #${{ env.ISSUE_NUMBER }}.
            
            Please analyze the issue and implement the required changes.
            
            PR Description: ${{ github.event.pull_request.body }}
            
            Instructions:
            1. First, fetch and read the issue #${{ env.ISSUE_NUMBER }} to understand the requirements
            2. Implement the necessary changes
            3. Commit your changes with descriptive messages
            4. Provide a summary of what you've done"
          else
            # –î–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
            PROMPT="You are working on an existing PR. A new comment was posted:
            
            Comment by @${{ github.event.comment.user.login }}:
            ${{ github.event.comment.body }}
            
            Please respond to this comment and make any requested changes.
            Remember to work in the existing PR branch: ${{ env.BRANCH_NAME }}"
          fi
          
          # –°–æ—Ö—Ä–∞–Ω—è–µ–º prompt –≤ —Ñ–∞–π–ª –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ Claude
          echo "$PROMPT" > /tmp/claude_prompt.txt
          echo "prompt_file=/tmp/claude_prompt.txt" >> $GITHUB_OUTPUT

      - name: Run Claude Code
        uses: anthropics/claude-code-base-action@beta
        with:
          prompt_file: ${{ steps.prepare_prompt.outputs.prompt_file }}
          # –†–∞–∑—Ä–µ—à–∞–µ–º Claude –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å git, —á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª—ã –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å GitHub
          allowed_tools: |
            Bash(git:*),
            View,
            Edit,
            GlobTool,
            GrepTool,
            BatchTool,
            mcp__github_file_ops__read_file,
            mcp__github_file_ops__commit_files,
            mcp__github_file_ops__update_claude_comment,
            mcp__github_file_ops__get_issue,
            mcp__github_file_ops__list_issues,
            mcp__github_file_ops__get_pull_request,
            mcp__github_file_ops__list_pull_requests
          
          # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥–µ–ª–∏
          model: claude-3-5-sonnet-20241022
          max_turns: 20
          timeout_minutes: 30
          
          # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è (–≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤)
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          # use_bedrock: true  # –î–ª—è AWS Bedrock
          # use_vertex: true   # –î–ª—è Google Vertex
          
          # GitHub —Ç–æ–∫–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API
          github_token: ${{ secrets.GITHUB_TOKEN }}
          
          # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
          custom_instructions: |
            You are working on the PR branch: ${{ env.BRANCH_NAME }}
            Always commit directly to this branch.
            When making commits, use clear, descriptive commit messages.
            After completing tasks, update the PR comment with a summary of changes.

      - name: Post completion comment
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const timestamp = new Date().toISOString();
            const runUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `‚úÖ Claude has completed the task at ${timestamp}\n\n[View workflow run](${runUrl})`
            });

      - name: Handle errors
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const runUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `‚ùå Claude encountered an error. Please check the [workflow logs](${runUrl}) for details.`
            });
